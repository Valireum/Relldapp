
//main
module;
import op;
import qry;


enum tx_type {
	sent,
	received
}


enum order_type {
	buy,
	sell
}

enum listing_state {
	market,
	sold,
	canceled
}

// simple user for testing-- replace with your own user entity
entity user {
	key id: byte_array;
	key name;
	key pubkey;
		
}

// we don't need that here.
//entity user_stats {
//	key user;
//	mutable level: integer = 1;
//	mutable title: text = "Newbie";
//	mutable exp_points:integer = 1;
//	mutable skill_points:integer = 1;
//}
//
//
//
//entity news {
//	key id: integer;
//	title: text;
//	info: text;
//	source:name;
//	posturl:text;
//	imgurl:text;
//	category:name;	
//	date:text;
//}

// example of token used as payment-- replace with your own
entity token {
	key id: byte_array;
	key name;
	key symbol:text;
}

// example of balance -- replace with your own
entity balance {
	key user, token;
	mutable amount: decimal;
}

// example of item -- replace with your own
entity item {
	key id:byte_array;
	max_inst:integer;
	uri: text;
}

// example of item instance -- replace with your own
entity item_inst {
	key item, id:integer;
	minter:user;
}

// simple inventory of inst items.
entity inventory {
	key user, item_inst;
}





//entity server {
//	key id:integer;
//	key host:text;
//	key name;
//	port:integer;
//	mode:name;
//	owner:pubkey;
//}

//entity server_items {
//	key server, item_inst;
//}

// Item Listing
entity item_listing {
	key id:byte_array;
	key item_inst;
	price:decimal;
	seller:user;
	
}

// Marketplace transactions history
entity market_history {
	key id: integer;
	item_inst;
	buyer:user;
	seller:user;
	price:decimal;
	date:timestamp;
}

//entity nft {
//	key id: byte_array;
//	key name;
//	desc:text;
//	icon: text;
//	created: timestamp;
//	max: integer;
//}

//entity nft_obj {
//	key id: byte_array;
//	nft;
//	mutable level:integer = 1;
//}

//entity nft_ownership {
//	key user, nft_obj;
//}

//entity nft_transactions {
//	key id: byte_array;
//	sender: user;
//	receiver: user;
//	nft_obj;
//	date: timestamp;
//}

entity market_bids {
	key id: integer;
	bidder: user;
	mutable amount:decimal;
	mutable time: timestamp;
	item: item_listing;
}

//entity nft_obj_listing {
//	key id: integer;
//	key item:nft_obj;
//	price: decimal;
//	expire: timestamp;
//	promoted: boolean;
//	mutable listing_state = listing_state.value(0);
//}






entity token_transactions {
	key id: byte_array;
	token;
	sender: user;
	receiver: user;
	amount: decimal;
	timestamp;
	
}

//entity token_sales {
//	key id: byte_array;
//	buyer: user;
//	token;
//	amount: decimal;
//	payment_method: text;
//	payment_amount: decimal;
//	payment_txid: text;
//	timestamp;
//}

//entity token_pairs {
//	key id: integer;
//	key name: text;
//	main: token;
//	second: token;
//	state:boolean = true;
//}
//
//entity ex_order {
//	key id: integer;
//	order_type;
//	token_pairs;
//	maker: user;
//	amount: decimal;
//	price: decimal;
//	timestamp;
//}
//
//entity ex_live {
//	id: integer;
//	ex_order;
//	mutable filled: decimal;
//	mutable canceled:boolean = false;
//}
//
//entity ex_live_transactions {
//	key id: integer;
//	buy_order: ex_live;
//	sell_order: ex_live;
//	token_pairs;
//	amount:decimal;
//	date: timestamp;
//}








