
//main
module;
import op;
import qry;


enum listing_state {
	market,
	sold,
	canceled
}


enum sale_offer {
	bid,
	instant,
	both
}

// simple user for testing-- replace with your own user entity
entity user {
	key id: byte_array;
	key name;
	key pubkey;
		
}


// example of token used as payment-- replace with your own
entity token {
	key id: byte_array;
	key name;
	key symbol:text;
}

// example of balance -- replace with your own
entity balance {
	key user, token;
	mutable amount: decimal;
}

// example of item -- replace with your own
entity item {
	key id:byte_array;
	max_inst:integer;
	dtid: text;
	created: timestamp;
}

// example of item instance -- replace with your own
entity item_inst {
	key item, id:integer;
	minter:user;
	mintedat: timestamp;
}

// simple inventory of inst items.
entity inventory {
	key user, item_inst;
}

// Item Listing
entity item_listing {
	key id:byte_array;
	key item_inst;
	price:decimal;
	seller:user;
	mutable listing_state = listing_state.value(0);
	created: timestamp;
	expire: timestamp;
	sale_offer;
}


// item transactions history
entity item_listing_history {
	key id: integer;
	item_inst;
	buyer:user;
	seller:user;
	price:decimal;
	date:timestamp;
}


// bids created by users
entity market_bids {
	key id: integer;
	bidder: user;
	mutable amount:decimal;
	mutable lastupdate: timestamp;
	item_listing;
}


entity token_transactions {
	key id: byte_array;
	token;
	sender: user;
	receiver: user;
	amount: decimal;
	date: timestamp;
	
}









